package cz.ucl.logic.app.entities;

import cz.ucl.logic.app.entities.definition.ICategory;
import cz.ucl.logic.app.entities.definition.ITag;
import cz.ucl.logic.app.entities.definition.ITask;
import cz.ucl.logic.app.entities.definition.IUser;

import java.util.Arrays;
import java.util.List;
import java.util.Objects;

public class User extends TaskOwner implements IUser { // TODO: Composition over inheritance?

    private final int id;
    private final String email;
    private final String username;
    private final String password;
    private List<ICategory> categories;
    private List<ITag> tags;

    public User(int id, String email, String username, String password, ICategory[] categories, ITag[] tags, ITask[] tasks) {
        super(tasks);
        this.id = id;
        this.email = email;
        this.username = username;
        this.password = password;
        this.categories = Arrays.asList(categories);
        this.tags = Arrays.asList(tags);
    }

    @Override
    public int getId() {
        return id;
    }

    @Override
    public String getEmail() {
        return email;
    }

    @Override
    public String getUsername() {
        return username;
    }

    @Override
    public String getPassword() {
        return password;
    }

    @Override
    public ICategory[] getCategories() {
        return categories.toArray(new ICategory[categories.size()]);
    }

    @Override
    public ICategory getCategory(int i) {
        return categories.get(i);
    }

    @Override
    public void saveCategory(int i, ICategory category) {
        categories.set(i, category);
    }

    @Override
    public void addCategory(ICategory category) {
        categories.add(category);
    }

    @Override
    public int categoriesCount() {
        return categories.size();
    }

    @Override
    public ITag[] getTags() {
        return tags.toArray(new ITag[tags.size()]);
    }

    @Override
    public ITag getTag(int i) {
        return tags.get(i);
    }

    @Override
    public void saveTag(int i, ITag tag) {
        tags.set(i, tag);
    }

    @Override
    public void addTag(ITag tag) {
        tags.add(tag);
    }

    @Override
    public int tagsCount() {
        return tags.size();
    }

    /* Generated by IDEA */

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        if (!super.equals(o)) return false;
        User user = (User) o;
        return id == user.id &&
                Objects.equals(email, user.email) &&
                Objects.equals(username, user.username) &&
                Objects.equals(password, user.password);
    }

    @Override
    public int hashCode() {
        return Objects.hash(super.hashCode(), id, email, username, password);
    }
}
