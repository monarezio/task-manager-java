package cz.ucl.logic.app.entities;

import cz.ucl.logic.app.entities.definition.task.ITask;
import cz.ucl.logic.app.entities.definition.ITaskOwner;

import java.util.Arrays;
import java.util.List;
import java.util.Objects;

abstract public class TaskOwner implements ITaskOwner {

    private final List<ITask> tasks;

    protected TaskOwner(ITask[] tasks) {
        this.tasks = Arrays.asList(tasks);
    }

    @Override
    public ITask[] getTasks() {
        return tasks.toArray(new ITask[tasks.size()]);
    }

    @Override
    public ITask getTask(int i) {
        return tasks.get(i);
    }

    @Override
    public void saveTask(int i, ITask task) {
        tasks.set(i, task);
    }

    @Override
    public void addTask(ITask task) {
        tasks.add(task);
    }

    @Override
    public int tasksCount() {
        return tasks.size();
    }

    /* Generated by IDEA */

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        TaskOwner taskOwner = (TaskOwner) o;
        return Objects.equals(tasks, taskOwner.tasks);
    }

    @Override
    public int hashCode() {
        return Objects.hash(tasks);
    }
}
